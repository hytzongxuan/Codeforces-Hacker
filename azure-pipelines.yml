# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  batch: true
  branches:
    include:
    - master

pr: none

jobs:
- job: linux
  timeoutInMinutes: 30

  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: GoTool@0
    inputs:
      version: '1.12'
  - script: |
      go version
      go get -v -t -d ./...
      if [ -f Gopkg.toml ]; then
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          dep ensure
      fi
      
    workingDirectory: '$(system.defaultWorkingDirectory)'
    displayName: 'Get dependencies'
  - script: |
      go test ./... -v
    workingDirectory: '$(system.defaultWorkingDirectory)'     
    displayName: 'Test'

- job: windows
  timeoutInMinutes: 30

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - task: GoTool@0
    inputs:
      version: '1.12'
  - script: |
      go version
      go get -v -t -d ./...
    workingDirectory: '$(system.defaultWorkingDirectory)'
    displayName: 'Get dependencies'
  - script: |
      go test ./... -v
    workingDirectory: '$(system.defaultWorkingDirectory)'     
    displayName: 'Test'

- job: macos  
  timeoutInMinutes: 30

  pool:
    vmImage: 'macOS-10.13'

  steps:
  - task: GoTool@0
    inputs:
      version: '1.12'
  - script: |
      go version
      go get -v -t -d ./...
    workingDirectory: '$(system.defaultWorkingDirectory)'
    displayName: 'Get dependencies'
  - script: |
      go test ./... -v
    workingDirectory: '$(system.defaultWorkingDirectory)'     
    displayName: 'Test'

- job: build
  dependsOn: linux
  timeoutInMinutes: 60

  pool:
    vmImage: 'Ubuntu-16.04'
    
  variables:
    GOBIN:  '$(GOPATH)/bin' # Go binaries path
    GOROOT: '/usr/local/go1.12' # Go installation path
    GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
    modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

  steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: 'Set up the Go workspace'
  - script: |
      go version
      go get -v -t -d ./...
      make deps

      if [ -f Gopkg.toml ]; then
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          dep ensure
      fi
      sudo apt-get install gcc g++ python2.7 python3
      
    workingDirectory: '$(modulePath)'
    displayName: 'Get dependencies'
  - script: |
      make build-linux64
    workingDirectory: '$(modulePath)'
    displayName: 'Build for Linux 64'
  - script: |
      make build-linux32
    workingDirectory: '$(modulePath)'
    displayName: 'Build for Linux 32'
  - script: |
      make build-windows64
    workingDirectory: '$(modulePath)'
    displayName: 'Build for Windows 64'
  - script: |
      make build-windows32
    workingDirectory: '$(modulePath)'
    displayName: 'Build for Windows 32'
  - script: |
      make build-osx64
    workingDirectory: '$(modulePath)'
    displayName: 'Build for OSX 64'
  - script: |
      make build-osx32
    workingDirectory: '$(modulePath)'
    displayName: 'Build for OSX 32'
  - script: |
      make test
    workingDirectory: '$(modulePath)'
    displayName: 'Test'
  - script: |
      bash <(curl -s https://codecov.io/bash) -t 3d625ec9-4ce0-40a8-97c4-af45c5930521
    workingDirectory: '$(modulePath)'
    displayName: 'Upload Codecov'